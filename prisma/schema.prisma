// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["deno"]
  output = "../generated/prisma"
  binaryTargets = ["native"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              Int @id @default(autoincrement())
  username        String @unique
  password        String
  holes           Hole[]
  approaches      Approach[]
  improvements    Improvement[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Hole {
  id              Int @id @default(autoincrement())
  author          User @relation(fields: [authorId], references: [id])
  authorId        Int
  name            String
  description     String
  edits           Int @default(0)
  approaches      Approach[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Approach {
  id              Int @id @default(autoincrement())
  hole            Hole @relation(fields: [holeId], references: [id])
  holeId          Int
  name            String
  description     String?
  solutions       Solution[]
  initiator       User @relation(fields: [initiatorId], references: [id])
  initiatorId     Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Solution {
  id              Int @id @default(autoincrement())
  approach        Approach @relation(fields: [approachId], references: [id])
  approachId      Int
  language        String
  bits            Int
  improvements    Improvement[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Improvement {
  id              Int @id @default(autoincrement())
  improvementBits Int
  newCode         String
  solution        Solution @relation(fields: [solutionId], references: [id])
  solutionId      Int
  user            User @relation(fields: [userId], references: [id])
  userId          Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
